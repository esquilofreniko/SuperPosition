class Gen {
    public:
    bool showLEDS = 0;
    bool drawLEDS = 0;
    long lastTrig = 0;
    int clockSpeed = 0;
    bool menu = 0;
    bool view = 0;
    short set = 0;
    short channel = 0;
    short division = 0;
    float vOut[4] = {0,0,0,0};
    float slewTarget[4];
    float slewStep[4];
    short slewTime[4];
    long slewBegin[4];
    float slewOut[4];
    short pos[4];

    bool patt[4][64];
    short probs[4][64];
    short clockDiv[4][64];
    short burst[4][64];
    short burstProb[4][64];
    short eventNote[4][64];
    bool eventProbActive[4][64];
    short eventProbMin[4][64];
    short eventProbMax[4][64];
    short eventSlew[4][64];

    bool eventQuant[4][96];

    short lengthMin[4] = {0,0,0,0};
    short lengthMax[4] = {15,15,15,15};
    short eventSizeMin[4] = {0,0,0,0};
    short eventSizeMax[4] = {15,15,15,15};

    short setBurst = 2;
    short setBurstProb = 10;
    short ratchet[4] = {0,0,0,0};
    short ratchetTrig[4] = {0,0,0,0};
    long ratchetCounter[4] = {0,0,0,0};
    short clockDivCount[4];
    short clockDivOp;
    short clockDivision = 2;
    short lengthMinTemp = 0;
    bool lengthSet = 1;
    short prob = 5;
    short pattMorph = 0;
    short posNote[4];
    short posNoteOld[4];
    bool selParam = 0;
    short timeParam = 0;
    short eventParam = 0;
    short timeParamMax = 5;
    short eventParamMax = 7;
    short timeMenuParam = 0;
    short eventMenuParam = 0;
    short eventMode[4];
    short eventStep[4] = {1,1,1,1};
    short eventSkip[4];
    const String eventModeName[2] = {"Probability","Markov Chain"};
    const String eventStepName[3] = {"Follow","Sync","Trig"};
    const String eventSkipName[2] = {"Skip","Sleep"};
    bool eventSizeSet = 1;
    short eventMorph[4];
    short eventProbSetMin = 0;
    short eventProbSetMax = 96;
    short eventProbSetNote = 0;
    short eventQuantMode[4];
    short eventDivision = 2;
    short eventDiv[4][64];
    short eventDivCount[4];
    short eventSetSlew;
    bool gateOut[4][4] = {{1,0,0,0},{0,1,0,0},{0,0,1,0},{0,0,0,1}};
    bool selPreset = 0;

    Gen();
    void run();
    void clock();
    void reset();
    void updatePosition();
    void writeNewPosition();
    void morphPatt();
    void morphNote();
    void output();
    void controls();
    void drawBg();
    void drawMatrix();
    void drawMatrixLED();
    void drawKey(int key);
    void setStep(int key);
    void drawInfo();
    void drawParams();
    void drawMenu();
    void ratcheting();
    void slew();
    void drawPreset();
    void writePreset(byte index);
    void loadPreset(byte index);
};